@import '../../assets/styles/variables.scss';

.input {
    padding-left: 0.7rem;
    border-radius: 0.25rem;
    border: 1px solid #D9D9D9;
    background: #FFF;
    box-shadow: 0px 0px 2px 0px rgba(0, 0, 0, 0.15);
}
.form_input {
    width: 20rem;
    height: 2.5rem;
} 
.tag_input {
    width: 18.75rem;
    height: 2.5rem;
}
.tag_input_wrapper {
    display: flex;
    gap: 5px;
    margin-top: 5px;
}
.input_label {
    font-size: 0.875rem;
    margin-bottom: 0.2rem;
}
.invalid {
    outline: none;
    border-color: red;
}
.error_message {
    color: red;
    font-size: 0.875rem;
    margin-bottom: 0;
}
.error_border {
    border-color: red;
    outline-color: red;
}
.btn {
    display: flex;
    width: 7.375rem;
    height: 2.7rem;
    padding: 0.5rem 1rem;
    flex-direction: column;
    align-items: center;
    gap: 0.25rem;
    border-radius: 0.25rem;
    background-color: white;
}


.tag_list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    align-items: flex-end;
    gap: 5px;
}

.btn_delete {
    border: 1px solid #F5222D;
    color: red;
}
.btn_add {
    border: 1px solid $ui-color;
    color: $ui-color;
}
@supports(-webkit-appearance: none) or (-moz-appearance: none) {
    .checkbox{
      -webkit-appearance: none;
      -moz-appearance: none;
      width: 20px;
      height: 20px;
      vertical-align: text-bottom;
      border: 1px solid #9ABBCE;
      border-radius: 2px;
      transition: all .02s;
    }
    .checkbox:after {
        content: '';
        width: 1rem;
        height: 1rem;
        display: block;
        margin: 0 auto;
        background-color: inherit;
        color: white;
    }
    .checkbox:hover, .checkbox:focus {
        outline: 3px solid rgba($ui-color, .6)
    }
    .checkbox:checked {
        border: 1px solid $ui-color;
    }
    .checkbox:checked::after {
        content: '';
        background-color: inherit;
        height: 9px;
        width: 4px;
        border-bottom: 2px solid $ui-color;
        border-right: 2px solid $ui-color; 
        transform: skewX(-6deg) rotate(45deg) translate(2px, 1px);

    }
}